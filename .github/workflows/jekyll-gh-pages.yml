name: Update and Deploy

on:
  schedule:
    - cron: '0 12 * * *'
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  update_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Python Script
        run: |
          python scripts/xivapi_calls.py || echo "Failed to run Python script"

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Record Current Hash
        id: record_hash
        run: |
          HASH=$(git rev-parse HEAD)
          echo $HASH > previous_commit_hash.txt
        continue-on-error: true

      - name: Calculate New Hash
        id: calculate_hash
        run: |
          if git diff --quiet; then
            echo "HASH=none" >> $GITHUB_ENV
          else
            HASH=$(git rev-parse HEAD)
            echo "HASH=$HASH" >> $GITHUB_ENV
          fi

      - name: Update CSS Cache Key
        run: |
          if [ "${{ env.HASH }}" != "none" ]; then
            sed -i "s|style.css?v=.*|style.css?v=${{ env.HASH }}|g" ./_site/index.html
          fi

      - name: Commit Cache Key Change
        id: commit_cache_key
        run: |
          git config --global user.name "Daazed McFarland"
          git config --global user.email "daazedjmcfarland@gmail.com"
          git add --all
          if ! git diff --cached --exit-code; then
            git commit -m "Update cache key"
          fi

      - name: Check for Other Changes
        id: check_changes
        run: |
          PREV_HASH=$(cat previous_commit_hash.txt)
          CURR_HASH=$(git rev-parse HEAD)
          if [ "$PREV_HASH" != "$CURR_HASH" ]; then
            # Store status for later use
            echo "CHANGES_DETECTED=true" >> $GITHUB_ENV
          else
            echo "CHANGES_DETECTED=false" >> $GITHUB_ENV
          fi

      - name: Commit Other Changes
        run: |
          git add --all
          if [ "${{ env.CHANGES_DETECTED }}" == "true" ]; then
            if ! git diff --cached --exit-code; then
              git commit -m "Automatic update"
              git push
            fi
          else
            echo "No substantial changes detected."
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: update_and_deploy

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          target-folder: _site
